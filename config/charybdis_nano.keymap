#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>







#define DEFAULT 0
#define NUMBER  1
#define SYMBOL  2
#define HOTKEY  3
#define MSE     4

#define AS(keycode) &as LS(keycode) keycode

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp TAB>;
        };
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        modcp: mod_copy {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_COPY";
            #binding-cells = <0>;
            bindings = <&as LS(C) C>, <&kp C>;

            mods = <(LGUI | RGUI)>;
        };
    };

    macros {
        macro_email_g: macro_email_g {
            // 135115

            compatible = "zmk,behavior-macro";
            label = "MACRO_EMAIL_GMAIL";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N3 &kp N5 &kp N1 &kp N1 &kp N5>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_left {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&mkp LCLK>;
        };

        combo_right {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = < &mkp MCLK >;
        };

        combo_LSHFT {
            timeout-ms = <50>;
            key-positions = <36 37>;
            bindings = <&mkp RCLK>;
        };

        combo_LSH {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp LSHFT>;
        };

        combo_2 {
            timeout-ms = <50>;
            key-positions = <38 21>;
            bindings = <&kp PLUS>;
        };

        combo_3 {
            timeout-ms = <50>;
            key-positions = <21 29>;
            bindings = <&kp MINUS>;
        };

        combo_LGUI {
            timeout-ms = <50>;
            key-positions = <26 38>;
            bindings = <&kp LGUI>;
        };

        combo_GU {
            timeout-ms = <50>;
            key-positions = <27 38>;
            bindings = <&tog 1>;
        };

        combo_GUI {
            timeout-ms = <50>;
            key-positions = <28 38>;
            bindings = < &kp TAB >;
        };

        combo_U {
            timeout-ms = <45>;
            key-positions = <8 9>;
            bindings = <&mo 1>;
        };

        combo_11 {
            timeout-ms = <40>;
            key-positions = <20 21>;
            bindings = <&mo 2>;
        };

        combo_22 {
            timeout-ms = <50>;
            key-positions = <21 26>;
            bindings = <&kp EXCL>;
        };

        combo_33 {
            timeout-ms = <50>;
            key-positions = <21 27>;
            bindings = <&kp AT>;
        };

        combo_44 {
            timeout-ms = <50>;
            key-positions = <21 28>;
            bindings = <&kp HASH>;
        };

        combo_55 {
            timeout-ms = <50>;
            key-positions = <21 14>;
            bindings = <&kp DLLR>;
        };

        combo_66 {
            timeout-ms = <50>;
            key-positions = <21 15>;
            bindings = <&kp PRCNT>;
        };

        combo_77 {
            timeout-ms = <50>;
            key-positions = <21 16>;
            bindings = <&kp CARET>;
        };

        combo_88 {
            timeout-ms = <50>;
            key-positions = <21 2>;
            bindings = <&kp AMPS>;
        };

        combo_99 {
            timeout-ms = <50>;
            key-positions = <21 3>;
            bindings = <&kp STAR>;
        };

        combo_00 {
            timeout-ms = <50>;
            key-positions = <21 4>;
            bindings = <&kp LPAR>;
        };

        combo_010 {
            timeout-ms = <40>;
            key-positions = <21 5>;
            bindings = <&kp RPAR>;
        };

        combo_011 {
            timeout-ms = <50>;
            key-positions = <21 17>;
            bindings = <&kp UNDER>;
        };

        combo_1a {
            timeout-ms = <40>;
            key-positions = <20 26>;
            bindings = <&kp N1>;
        };

        combo_2b {
            timeout-ms = <50>;
            key-positions = <20 27>;
            bindings = <&kp N2>;
        };

        combo_3c {
            timeout-ms = <50>;
            key-positions = <20 28>;
            bindings = <&kp N3>;
        };

        combo_4d {
            timeout-ms = <50>;
            key-positions = <20 14>;
            bindings = <&kp N4>;
        };

        combo_5f {
            timeout-ms = <50>;
            key-positions = <20 15>;
            bindings = <&kp N5>;
        };

        combo_6g {
            timeout-ms = <50>;
            key-positions = <20 16>;
            bindings = <&kp N6>;
        };

        combo_7h {
            timeout-ms = <50>;
            key-positions = <20 2>;
            bindings = <&kp N7>;
        };

        combo_8j {
            timeout-ms = <50>;
            key-positions = <20 3>;
            bindings = <&kp N8>;
        };

        combo_9k {
            timeout-ms = <50>;
            key-positions = <20 4>;
            bindings = <&kp N9>;
        };

        combo_0l {
            timeout-ms = <50>;
            key-positions = <20 29>;
            bindings = <&kp N0>;
        };

        combo_01m {
            timeout-ms = <40>;
            key-positions = <20 17>;
            bindings = <&kp KP_DOT >;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
&td0                  &kp Q  &kp W         &lt 2 E    &kp R            &kp T      &kp Y       &kp U        &kp I      &kp O      &kp P     &mt LEFT_SHIFT EQUAL
&mt LEFT_SHIFT ENTER  &kp A  &kp S         &kp D      &kp F            &kp G      &kp H       &kp J        &kp K      &kp L      &kp SEMI  &lt 3 SQT
&kp CAPS              &kp Z  &kp X         &kp C      &kp V            &kp B      &kp N       &kp M        &kp COMMA  &kp DOT    &kp FSLH  &kp BSLH
                             &kp LC(C)     &kp LC(V)  &kp BSPC         &kp SPACE  &lt 2 LEFT  &lt 1 RIGHT  &kp LBKT   &kp RBKT
                             &kp LEFT_ALT  &kp GRAVE  &mt LCTRL LSHFT  &lt 1 DEL  &kp UP      &kp EQUAL    &kp DOWN   &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
            trackball-bindings = <&tmv>;
        };

        number_layer {
            label = "NUMBER";
            bindings = <
&kp ESC    &kp STAR   &kp N7     &kp N8     &kp N9    &kp FSLH   &kp F12         &kp F7     &kp F8   &kp F9   &none  &kp LS(UNDER)
&kp ENTER  &kp MINUS  &kp N4     &kp N5     &kp N6    &kp DOT    &macro_email_g  &kp F4     &kp F5   &kp F6   &none  &kp MINUS
&kp EQUAL  &kp PLUS   &kp N1     &kp N2     &kp N3    &kp N0     &none           &kp F1     &kp F2   &kp F3   &none  &none
                      &kp LC(C)  &kp LC(V)  &kp BSPC  &kp SPACE  &kp LEFT        &kp RIGHT  &kp F10  &kp F11
                      &trans     &none      &kp SEMI  &kp SEMI   &kp UP          &kp DOWN   &none    &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;

            trackball-bindings = <&tsl>;
        };

        symbol_layer {
            label = "SYMBOL";
            bindings = <
&kp FSLH       &kp STAR   &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR   &none      &none      &kp UP    &none      &none  &none
&kp RET        &kp MINUS  &kp DLLR   &kp PRCNT  &kp CARET  &kp UNDER  &none      &kp LEFT   &kp DOWN  &kp RIGHT  &none  &none
&kp LS(TILDE)  &kp PLUS   &kp EXCL   &kp AT     &kp HASH   &kp EQUAL  &none      &none      &kp DOWN  &none      &none  &none
                          &kp LC(C)  &kp LC(V)  &kp BSPC   &kp SPACE  &kp SPACE  &kp SPACE  &none     &none
                          &none      &none      &kp LSHFT  &none      &none      &none      &none     &none
            >;

            trackball-bindings = <&tmv_fine>;
            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        hotkey_layer {
            label = "HOTKEY";
            bindings = <
&none  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &bt BT_CLR    &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &none
&none  &kp F4  &kp F5  &kp F6  &none    &kp F12  &out OUT_USB  &none         &none         &none         &none         &none
&none  &kp F1  &kp F2  &kp F3  &none    &kp F12  &out OUT_BLE  &none         &none         &none         &none         &none
               &none   &none   &none    &none    &none         &none         &none         &none
               &none   &none   &none    &none    &none         &none         &none         &none
            >;

            trackball-bindings = <&tmv_x>;
            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp UP DOWN>;
        };
    };
};

        };
    };
};
